vm: 해당 VM에 대한 정보를 가져옴 -> {

}
Datacenter: DataCenter 이름 -> {}
host: host 이름 -> {}
Datastore: DataStore 이름 -> {}
disk: Disk 이름 -> {}
network: Network 이름 -> {}
Memory: Memory 양 + Memory 동적 변경 -> {}
Power: Power 제어 -> {}

DB 관련(MongoDB)
USER 정보
{
    name: 사용자 이름,
    email: 사용자 이메일,
    username: 사용자 ID(WatchDog),
    password: 사용자 PASSWORD,
}

sessionID 추가 여부?? -> 매번 API 가져올 때마다 같은 sessionID인지 확인


Private Cloud 분석 시 필요 정보
{
    vSphere_ID,
    vSphere_PASSWORD,
    vCenter_IP_ADDRESS
}

Host 정보 표시
1. Host 이름
2. Host hostIP
3. CPU
4. Memory 크기
5. Disk 크기(capacity: 용량 )
6. Power 정보

Host 내 VM 정보 표시
1. VM 이름
2. VM IP
3. CPU
4. Memory
5. Disk
6. 파워 정보

VM 정보 표시
1. CPU 사용 분석
2. Memory 사용 분석
3. Network 사용 분석
4. log 파일

그 외 기능
1. 푸시 알림 구현


문제점
1. 실시간 사용 분석
2. 향후 위험 요소 분석
3. 알림 기능 구현


@@@ 붙은 경우 변경해야 하는 녀석임
(예시)
@@@
/change/path

링크 경로
rootRouter
/ -> Root 경로 메인 페이지 GET
/login -> get(login페이지) post(로그인 처리 후 메인)
/join -> get(join페이지) post(회원가입 처리 후 login)
/logout -> logout하고 다시 Main으로 GET

vmRouter(경로는 /부터 다 씀)
/vm -> get(vSphere 기초 정보 입력 페이지, DB에 값 있으면 /vm/data로 이동), post(입력한 정보를 토대로 /vm/data로 이동)
/vm/data -> 
    1. query가 존재하면 vSphere API로 Host 등록해서 /hosts로 이동
    2. query없으면 바로 /hosts 이동


@@@
/hosts -> 호스트 페이지 Render(Session에 User를 기반으로 저장된 Host 정보 보여줌)
/hosts/get-vm -> query에{hosts, id, pw, ip}를 통해